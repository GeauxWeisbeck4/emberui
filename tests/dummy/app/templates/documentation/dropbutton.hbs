<h1>\{{eui-dropbutton}}</h1>

<div class="intro">
  Combines a button and popup into a dropbutton or splitbutton for quick actions.
</div>

<h2>Parameters</h2>

<ul class="parameterindex">
  <li class="header">Aesthetic</li>
  <li><a href="#section-popupwidth">popupWidth</a></li>
  <li><a href="#section-size">size</a></li>
  <li><a href="#section-style">style</a></li>

  <li class="header">States</li>
  <li><a href="#section-disabled">disabled</a></li>
  <li><a href="#section-loading">loading</a></li>

  <li class="header">Actions</li>
  <li><a href="#section-options">options</a></li>
</ul>


<h4 id="section-listwidth">popupWidth <span>string</span></h4>
<p>
  Width of the popup. You must pass in a CSS size value with the unit. The select uses CSS box-sizing to ensure precentage-based sizes are actual sizes. A width smaller than the width of the button will be ignored.
</p>

<div class="output">
  {{#eui-dropbutton options=options popupWidth="200px"}}
    Actions
  {{/eui-dropbutton}}
</div>


<h4 id="section-size">size <span>string</span></h4>
<p>
  Controls the size of the button. See {{link-to "button" "documentation.button"}} for usage instructions.
</p>

<pre>\{{#eui-dropbutton size='small' options=options}}
  Actions
\{{/eui-dropbutton}}

\{{#eui-dropbutton size='small' options=optionsPrimary}}</pre>

<div class="output">
  {{#eui-dropbutton size='small' options=options}}
    Actions
  {{/eui-dropbutton}}

  {{eui-dropbutton size='small' options=optionsPrimary}}
</div>


<h4 id="section-style">style <span>string</span></h4>
<p>
  Controls the aesthetic style of the button. See {{link-to "button" "documentation.button"}} for usage instructions.
</p>

<div class="output">
  {{#eui-dropbutton style='default' options=options}}
    Actions
  {{/eui-dropbutton}}

  {{eui-dropbutton style='default' options=optionsPrimary}}

  {{#eui-dropbutton style='primary' options=options}}
    Actions
  {{/eui-dropbutton}}

  {{eui-dropbutton style='primary' options=optionsPrimary}}
</div>


<h4 id="section-disabled">disabled <span>boolean</span></h4>
<p>
  Disables the button. See {{link-to "button" "documentation.button"}} for usage instructions.
</p>

<div class="output">
  {{eui-dropbutton label='Actions' disabled=true options=options}}
  {{eui-dropbutton label='Actions' disabled=true options=optionsPrimary}}
</div>


<h4 id="section-loading">loading <span>boolean</span></h4>
<p>
  See {{link-to "button" "documentation.button"}} for usage instructions.
</p>

<p>
  The dropbutton's loading state is identical to that of a regular button. If a splitbutton is put into a loading state only the left button is put into a loading state and the right one remains intact.
</p>

<div class="output">
  {{#eui-dropbutton loading=true options=options}}
    Actions
  {{/eui-dropbutton}}
  {{eui-dropbutton loading=true options=optionsPrimary}}
</div>


<h4 id="section-options">options <span>array</span></h4>
<p>
  The dropbutton takes an array of actions.
</p>

<pre>options: [
    Ember.Object.create({ label: 'Save', action: 'save' }),
    Ember.Object.create({ label: 'Delete', action: delete' }),
    Ember.Object.create({ label: 'Edit', action: 'edit' })
]</pre>

<div class="output">
  {{#eui-dropbutton options=options}}
    Actions
  {{/eui-dropbutton}}
</div>

<p>
  Each action should have a label and action associated with it. You may optionally set one of the actions as the primary action and omit its label if you wish to use only an icon. If multiple actions are set as primary the first one will be taken and the rest treated as secondary actions.
</p>

<pre>optionsPrimary: [
    Ember.Object.create({ label: 'Save', action: 'save', primary: true }),
    Ember.Object.create({ label: 'Delete', action: 'delete' }),
    Ember.Object.create({ label: 'Edit', action: 'edit' })
]</pre>

<div class="output">
  {{#eui-dropbutton options=optionsPrimary}}
    Actions
  {{/eui-dropbutton}}
</div>

<p>
  If there is a primary action the button will act as a splitbutton, if no primary action is assigned it will behave as a dropbutton.
</p>

<p>
  The context of the button gets passed through with the click and allows you to pass through information that the action can act on.
</p>

<pre>\{{eui-dropbutton options=optionsPrimary item='item 1'}}</pre>

<pre>optionsContext: [
  Ember.Object.create({ label: 'Save', action: 'saveItem', primary: true }),
  Ember.Object.create({ label: 'Delete', action: 'deleteItem' }),
  Ember.Object.create({ label: 'Edit', action: 'editItem' })
]</pre>

<div class="output">
  {{eui-dropbutton options=optionsContext item='item 1'}}
</div>
