<h1>\{{eui-button}}</h1>


<h4 id="section-class">class <span>string</span></h4>
<p>
  Assigns a custom CSS class to the button.
</p>


<h4 id="section-size">size <span>string</span></h4>
<p>
  The size of the button.
</p>

<h5>Values</h5>
<ul class="defaults">
  <li>tiny</li>
  <li>small</li>
  <li>medium (default)</li>
  <li>large</li>
</ul>
<p>
  Additional sizes can be added via CSS. See {{link-to "Theming" "documentation.theming"}}
</p>

<pre>\{{#eui-button size='tiny'}}Save Changes\{{/eui-button}}
\{{#eui-button size='small'}}Save Changes\{{/eui-button}}
\{{#eui-button size='medium'}}Save Changes\{{/eui-button}}
\{{#eui-button size='large'}}Save Changes\{{/eui-button}}</pre>

<div class="output">
  {{#eui-button size='tiny'}}Save Changes{{/eui-button}}
  {{#eui-button size='small'}}Save Changes{{/eui-button}}
  {{#eui-button size='medium'}}Save Changes{{/eui-button}}
  {{#eui-button size='large'}}Save Changes{{/eui-button}}
</div>


<h4 id="section-style">style <span>string</span></h4>
<p>
  The aesthetic style of the button.
</p>

<h5>Values</h5>
<ul class="defaults">
  <li>default (default)</li>
  <li>primary</li>
</ul>
<p>
  Additional styles can be added via CSS. See {{link-to "Theming" "documentation.theming"}}
</p>

<pre>\{{#eui-button style='default'}}Save Changes\{{/eui-button}}
\{{#eui-button style='primary'}}Save Changes\{{/eui-button}}</pre>

<div class="output">
  {{#eui-button style='default'}}Save Changes{{/eui-button}}
  {{#eui-button style='primary'}}Save Changes{{/eui-button}}
</div>


<h4 id="section-width">width <span>string</span></h4>
<p>
  Width of the button. You must pass in a CSS size value with the unit. The select uses CSS box-sizing to ensure precentage-based sizes are actual sizes. If your label is longer than the width of the button the label will get truncated.
</p>

<pre>\{{#eui-button width="100px"}}Save Changes\{{/eui-button}}</pre>

<div class="output">
  {{#eui-button width="100px"}}Save Changes{{/eui-button}}
</div>


<h4 id="section-disabled">disabled <span>boolean</span></h4>
<p>
  Disables the button and prevents the action from firing if clicked.
</p>

<pre>\{{#eui-button disabled=true}}Save Changes\{{/eui-button}}
\{{#eui-button disabled=isDisabled action='switchToDisabled'}}Click to Disable\{{/eui-button}}</pre>

<pre>actions: {
  switchToDisabled: function(controller) {
    this.get("controller").set('isDisabled', true);
  }
}</pre>

<div class="output">
  {{#eui-button disabled=true}}Save Changes{{/eui-button}}
  {{#eui-button disabled=isDisabled action='switchToDisabled'}}Click to Disable{{/eui-button}}
</div>


<h4 id="section-loading">loading <span>boolean</span></h4>
<p>
  If <em>loading</em> is set to true the <em>disabled</em> state is automatically activated as well and the loading state is entered. Upon entering the loading state the button label is faded out and the animation is faded in.
</p>
<p>
  The button maintains its size during the loading phase. If the button is too small to show all three dots of the loading animation the amount of dots will be reduced until it fits.
</p>

<pre>\{{#eui-button loading=true}}Save Changes\{{/eui-button}}
\{{#eui-button loading=isLoading action='switchToLoading'}}Click to Load\{{/eui-button}}</pre>

<pre>actions: {
  switchToLoading: function(controller) {
    this.get("controller").set('isLoading', true);
  }
}</pre>

<div class="output">
  {{#eui-button loading=true}}Save Changes{{/eui-button}}
  {{#eui-button loading=isLoading action='switchToLoading'}}Click to Load{{/eui-button}}
</div>


<h4 id="section-type">type <span>string</span></h4>
<p>
  Type of button. Set to submit if you want the button to submit a form on enter.
</p>

<h5>Values</h5>
<ul class="defaults">
  <li>button (default)</li>
  <li>submit</li>
</ul>


<h4 id="section-action">action <span>string</span></h4>
<p>
  The action you want to trigger when the user clicks the button.
</p>

<pre>\{{#eui-button action='showAlert'}}Show Alert\{{/eui-button}}</pre>

<pre>actions: {
  showAlert: function() {
    alert("Showing Alert");
  }
}</pre>

<div class="output">
  {{#eui-button action='showAlert'}}Show Alert{{/eui-button}}
</div>

<p>
  You can use closeure actions to pass in context to the actions.
</p>

<pre>\{{eui-button label='Show Alert' action=(action "deleteItem" item)}}</pre>

<pre>actions: {
  deleteItem(item) {
    this.controller.get('items').removeObject(item);
  }
}</pre>
