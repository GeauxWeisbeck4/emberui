<h1>poplist</h1>

<div class="intro">
  A fixed positioned popup window that presents a list of choices to the user.
</div>

<p>
  This component is created programatically and can be done by calling the <em>show()</em> method on the component.
</p>

<pre>import poplistComponent from 'appkit/components/eui-poplist'

poplistComponent.show({
  targetObject: this
  options: this.get('options'),
  style: 'bubble'
});</pre>

<p>
  The poplist is created on the body element and positioned using fixed positioning. It is sized and positioned according to the window frame, not the page content which allows for a much more native feel. Because of this positioning you can safely use this poplist inside elements with <em>overflow: auto;</em> without it getting cut off or causing the element to scroll. The poplist automatically closes when the window is scrolled.
</p>

<p>
  This component implementation is still very raw.
</p>

<h2>Parameters</h2>

<ul class="parameterindex">
  <li class="header">Required</li>
  <li><a href="#section-targetobject">targetObject</a></li>

  <li class="header">Aesthetic</li>
  <li><a href="#section-style">style</a></li>

  <li class="header">States</li>
  <li><a href="#section-isopen">isOpen</a></li>

  <li class="header">Actions</li>
  <li><a href="#section-options">options</a></li>
</ul>


<h4 id="section-targetobject">targetObject <span>object</span></h4>
<p>
  Required for Ember to behave correctly. Set it equal to <em>this</em>
</p>


<h4 id="section-isopen">style <span>string</span></h4>
<p>
  The aesthetic style of the poplist.
</p>

<h5>Values</h5>
<ul class="defaults">
  <li>bubble</li>
</ul>
<p>
  Additional styles can be added via CSS. See {{link-to "Theming" "documentation.theming"}}
</p>


<h4 id="section-isopen">isOpen <span>boolean</span></h4>
<p>
  Passes back knowledge of whether the poplist is open. This allows you to create, for example, a button that is styled differently while the poplist is open. It also allows you to prevent the poplist from being opened while it is already open.
</p>

<pre>import poplistComponent from 'appkit/components/eui-poplist'

if (!this.get('poplistIsOpen')) {
  poplistComponent.show({
    _parentView: this.get('parentView'),
    parent: this,
    isOpenBinding: 'parent.poplistIsOpen',
    options: this.get('options'),
    style: 'bubble'
  });
}</pre>


<h4 id="section-isopen">options <span>array</span></h4>
<p>
  See the {{link-to "dropbutton" "documentation.dropbutton"}} actions section.
</p>
